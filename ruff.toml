target-version = "py310"
line-length = 120

[lint]
select = [
    "A", # prevent using keywords that clobber python builtins
    "ANN", # flake8 annotations
    "B", # bugbear: security warnings
    "BLE", # blind exceptions
    "C4", # flake8-comprehensions
    "C90", # McCabe complexity
    "COM", # flake8-commas
    "D", # pydocstyle
    "E", # pycodestylex
    "E4",
    "E7",
    "E9",
    "ERA", # eradicate
    "F", # pyflakes
    "FLY", # flynt
    "FURB", # refurb
    "I", # isort
    "ICN", # flake8-import-conventions
    "ISC", # implicit string concatenation
    "N", # Pep* naming
    "PERF", # perflint
    "PIE", # flake8-pie
    "PL", # PyLint
    "PT", # flake8-pytest-style
    "Q", # flake8-quotes
    "R", # PyLint Refactor
    "RET", # flake8-return
    "S", # bandit,
    "SIM", # flake8-simplify
    "T10", # flake8-debugger
    "T20", # flake8-print
    "TC", # flake8-type-checking
    "UP", # pyupgrade
    "W", # pycodestyle warnings
    "YTT", # flake8 2020
]
extend-select = ["UP"]
ignore = [
    "COM812",
    # "D100", # Missing docstring in public module
    # "D101", # Missing docstring in public class
    # "D102", #  Missing docstring in public method
    # "D103", #  Missing docstring in public function
    # "D104", #  Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D106", # Missing docstring in public nested class
    "D107", # Missing docstring in `__init__`
    "D203", # one-blank-line-before-class
    "D212", # multi-line-summary-first-line
    "D213", # multi-line-summary-second-line
    "E731", # lambda-assignment: lambdas are substential in maintenance of py2/3 codebase
    "ISC001", # conflicts with ruff format command
    "RET503",
    "I001", # unsorted imports https://docs.astral.sh/ruff/rules/unsorted-imports/#unsorted-imports-i001
    "UP037", # [*] Remove quotes from type annotation
    # "UP035", # Import from `collections.abc` instead: `Sequence`
    "UP031", # Use format specifiers instead of percent format
    "SIM108", # Use ternary operator instead of...
    "PLR2004", # Magic value used in comparison
    "DJ001", # Avoid using `null=True` on string-based fields such as `CharField`
    "N818", # Exception name {name} should be named with an Error suffix
    "Q000", # Single quotes found but double quotes preferred
    # todos
    "BLE001", # blind exception
    "S324", # insecure md5
    "C901", # too complex
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "PLW0603",
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv"
]

[format]
quote-style = "preserve"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[lint.isort]
case-sensitive = true
force-wrap-aliases = true
combine-as-imports = true
known-third-party = ['holidays']
no-sections = false
lines-after-imports = 2
relative-imports-order = "furthest-to-closest"
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]

[lint.per-file-ignores]
"tests/**.py" = [
    "S101",
    "PLR2004",
    "S",
    "SIM117",
    "D",
    "UP",
    "PLR0913",
    "ANN",
    "N999",
    "PT006",
]

"tests/demoapp/**/migrations/*.py" = ["ALL"]
"src/django_temporary_permissions/version.py" = ["ALL"]
"**/__init__.py" = ["D104"]
"**/apps.py" = ["UP035"]
"**/migrations/**" = ["D100", "D101", "E501"]
